openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Highload lab API description"
  description: Описание API для домашнего задания по курсу Архитектура 
программных систем
servers:
  - url: http://localhost:8081
    description: User service
paths:
  /auth:
    get:
      summary: Authenticate user using provided credentials
      responses:
        "200":
          description: User ID
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Failed to authenticate user using provided 
credentials
  /register:
    post:
      summary: Register new user
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/RegisterUserRequest"
      responses:
        "201":
          description: Added user's id
          content:
            application/json:
              schema:
                type: integer
        "400":
          description: Necessary request parameters missing
        "409":
          description: User with such login/email already exists
        "500":
          description: Unexpected error
  /search_by_name:
    get:
      summary: Find users by their first and last names
      parameters:
        - name: first_name
          description: First name
          in: query
          required: true
          schema:
            type: string
        - name: last_name
          description: Last name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Users for the provided masks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersList"
        "400":
          description: Necessary request parameters missing
        "401":
          description: Failed to authenticate user using provided 
credentials
        "500":
          description: Unexpected error
  /search_by_login:
    get:
      summary: Find user by login
      parameters:
        - name: login
          description: User's login
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User with the given login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Necessary request parameters missing
        "401":
          description: Failed to authenticate user using provided 
credentials
        "500":
          description: Unexpected error
components:
  schemas:
    UsersList:
      type: array
      items:
        $ref: "#/components/schemas/User"
    User:
      type: object
      required:
        - first_name
        - last_name
        - email
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        login:
          type: string
    RegisterUserRequest:
      type: object
      required:
        - first_name
        - last_name
        - login
        - password
        - email
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        login:
          type: string
        password:
          type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
security:
  - basicAuth: []
